-- location api/object for keeping track of x,y,z,&o without
-- the use of gps
-- include with os.loadAPI("location")

moves = 0
x = 0
y = 0
z = 0
o = 0
place = {}

function init()
	term.clear()
    --print("Set location? (y/n)")
    local setOption = 'n' --io.read()
    if(setOption == 'y' or setOption == 'Y') then
        print("Initializing turtle location")
        print("x: ")
        x = tonumber(io.read())
        print("y: ")
        y = tonumber(io.read())
        print("z: ")
        z = tonumber(io.read())
        print("orientation  (n,s,e,w): ")
        oStr = io.read()
        o = getOrientationFromStr(oStr)
    else
        x = 0
        y = 0
        z = 0
        o = 2 -- North
    end
	place["home"] = {x=x,y=y,z=z,o=o}
    place["store"] = {x=-167,y=10,z=320,o=1}
    moves = 0
	print("Great, the turtle is ready for action")	
end

function f(n)
	for i = 1, n do
		if(turtle.forward()) then
			if o == 0 then
				z = z + 1
			elseif o == 1 then
				x = x - 1
			elseif o == 2 then
				z = z - 1
			elseif o == 3 then
				x = x + 1
			end
		else
			return false
		end
	end
    moves = moves + 1
	return true
end

function b(n)
	for i = 1, n do
		if(turtle.back()) then
			if o == 0 then
				z = z - 1
			elseif o == 1 then
				x = x + 1
			elseif o == 2 then
				z = z + 1
			elseif o == 3 then
				x = x - 1
			end
		else
			return false
		end
	end
    moves = moves + 1
	return true
end

function u(n)
	for i = 1, n do
		if(turtle.up()) then
			y = y + 1
		else
			return false
		end
	end
    moves = moves + 1
	return true
end

function d(n)
	for i = 1, n do
		if(turtle.down()) then
			y = y - 1
		else
			return false
		end
	end
    moves = moves + 1
	return true
end

function r()
	o = (o + 1) % 4
	turtle.turnRight()
end

function l()
	o = (o + 4 - 1) % 4
	turtle.turnLeft()
end

function t()
	o = (o + 2) % 4
	turtle.turnRight()
	turtle.turnRight()
end

-- according to http://minecraft.gamepedia.com/Tutorials/Navigation
function getOrientationFromStr(str)
    if(oStr == 'n' or oStr == 'N') then
        return 2
    elseif (oStr == 'e' or oStr == 'E') then
        return 3
    elseif (oStr == 's' or oStr == 'S') then
        return 0
    else
        return 1
    end
end

function p(oTarget)
    local turn = (o + 4 - oTarget) % 4
    if turn == 0 then
        -- already there
    elseif turn == 1 then
        l()
    elseif turn == 2 then
        t()
    else
        r()
    end
end

function where()
	print("I'm at " .. x .. ", " .. y .. ", " .. z .. " " .. o)
	return {x=x,y=y,z=z,o=o}
end

function goto(placeWrapper)
    local target
    if(type(placeWrapper) == "string") then
        target = place[placeWrapper]
    else
        target = placeWrapper
    end
    local xTarget = target.x
    local yTarget = target.y
    local zTarget = target.z
    local oTarget = target.o
    while (x ~= xTarget or y ~= yTarget or z ~= zTarget) do
        -- x axis W-E
        if x < xTarget then
            p(3)
            f(1)
        elseif x > xTarget then
            p(1)
            f(1)
        end
        -- z axis N-S
        if z < zTarget then
            p(0)
            f(1)
        elseif z > zTarget then
            p(2)
            f(1)
        end
        -- y axis D-U
        if y < yTarget then
            u(1)
        elseif y > yTarget then
            d(1)
        end
    end
    p(oTarget)
    print("Arrived after goto")
    where()
end

function goHome()
    goto("home")
end

init()
