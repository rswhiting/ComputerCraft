-- build a train track
os.loadAPI("location")
os.loadAPI("pack")

height = 23

function init()
    pack.define("stair",{1,2,3})
    pack.define("rail",{4,5,6,7})
    pack.define("stone",{8,9,10,11,12,13,14,15,16})
end

function placeBridge()
    turtle.digDown();
    location.d(1);
    turtle.digDown();
    pack.select("stone");
    turtle.placeDown();
    location.u(1);
    pack.select("rail");
    turtle.placeDown();
    while turtle.detect() do
        turtle.dig();
    end
    location.f(1);
end

function digOutArea()
    turtle.digDown();
    for i=0,3 do
        location.d(1);
        turtle.digDown();
    end
    for i=0,4 do
        while turtle.detect() do
            turtle.dig();
        end
        location.f(1);
        while turtle.detectUp() do
            turtle.digUp();
        end
        turtle.digDown();
    end
end

function placeCap()
    -- first layer of the cap
    location.t(); -- turn to face start
    pack.select("stair");
    turtle.placeUp();
    for i=0,2 do
        location.f(1);
        pack.select("stone");
        turtle.placeUp();
    end
    location.f(1);
    location.t(); -- face forward again
    pack.select("stair");
    turtle.placeUp();

    -- second layer of the cap
    location.d(1);
    location.f(1);
    pack.select("stair");
    turtle.placeUp();
    location.f(1);
    pack.select("stone");
    turtle.placeUp();
    location.f(1);
    location.t(); -- turn to face start
    pack.select("stair");
    turtle.placeUp();
    location.f(1);
end

function placePillar()
    local pillarHeight = height - 4;
    for i=0,pillarHeight do 
        turtle.digDown();
        location.d(1);
    end
    for i=0,pillarHeight do
        location.u(1);
        pack.select("stone");
        turtle.placeDown();
    end
end

function finish()
    location.f(1);
    location.t();
    pack.select("stone");
    turtle.place();
    location.b(2);
    location.u(5);
end

function buildOne()
    for i=0,1 do
        placeBridge();
    end
    location.f(1);
    for i=0,4 do
        placeBridge();
    end
    location.b(6);
    digOutArea();
    placeCap();
    placePillar();
    finish();
    placeBridge();
    location.f(5);
end

function checkSupply()
    if(pack.remaining("stone") < (12 + height - 3) or
        pack.remaining("stair") < 8 or
        pack.remaining("rail") < 4) then
        local here = location.where()
        print("I need supplies! (enter when done)")
        io.read()
    end
end

function build()
    while true do
        checkSupply();
        buildOne();
    end
end

init()
build();
