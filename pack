-- Takes care of defining where certain supplies are in the pack

local packMap = {}

function define(name, indexArray)
	packMap[name] = indexArray
end

function remaining(name)
	if(packMap[name]) then
		local count = 0;
        frontLoad(name);
		if(turtle.getItemCount(packMap[name][1]) < 64) then
           count = turtle.getItemCount(packMap[name][1]);
        else
            for i = 1, #(packMap[name]) do
                count = count + turtle.getItemCount(packMap[name][i])
            end
        end
		return count
	else
		return 0
	end
end

function emptyCount()
    local empty = 0
    for i=1,16 do
        if turtle.getItemCount(i) == 0 then
            empty = empty + 1
        end
    end
    return empty
end

function drop(name)
	if(packMap[name]) then
		for i = 1, #(packMap[name]) do
            turtle.select(packMap[name][i])
            turtle.drop()
		end
	end
end

function dropAll()
--    local count = 0
    for i=1,16 do
        turtle.select(i)
        turtle.drop()
    end
--    return count
end

function frontLoad(name)
	if(packMap[name]) then
        for i = 2, #(packMap[name]) do
            if (turtle.getItemCount(packMap[name][i]) > 0) then
                turtle.select(packMap[name][i]);
                turtle.transferTo(packMap[name][1]);
            end
        end
    end
end

function select(name)
    local firstSlot = 1;
	if(packMap[name]) then
		if(turtle.getItemCount(packMap[name][firstSlot]) > 1) then
			if (turtle.getItemCount(packMap[name][firstSlot]) < 3) then
                frontLoad(name);
            end
			turtle.select(packMap[name][firstSlot]);
		else
			print("Out of " .. name)
		end
	end
end
